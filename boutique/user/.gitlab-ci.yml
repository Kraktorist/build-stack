workflow:
  rules:
    - if: $CI_COMMIT_TAG

stages:
  - build

build-user:
  stage: build
  tags: [dev]
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker && echo $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
    - /kaniko/executor
      --insecure
      --build-arg "COMMIT=${CI_COMMIT_SHORT_SHA}"
      --build-arg "BUILD_DATE=${CI_JOB_STARTED_AT}"
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/user/Dockerfile-release"
      --destination "${NEXUS_REGISTRY}/boutique/user:${CI_COMMIT_SHORT_SHA}"

build-user-db:
  image: docker.io/docker:20.10.16
  tags: [dev]
  services:
    - name: docker.io/docker:20.10.16-dind
      entrypoint: ["dockerd-entrypoint.sh"]
      command: ["--insecure-registry", "192.168.0.0/24"]
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 0
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  script:
    - mkdir -p ${HOME}/.docker && echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - echo "Waiting for docker cli to respond before continuing build..."
    - |
      for i in $(seq 1 30); do
          if ! docker info &> /dev/null; then
              echo "Docker not responding yet. Sleeping for 2s..." && sleep 2s
          else
              echo "Docker ready. Continuing build..."
              break
          fi
      done
    - docker build --build-arg BUILD_DATE=${CI_JOB_STARTED_AT} --build-arg COMMIT=${CI_COMMIT_SHORT_SHA} -t "${NEXUS_REGISTRY}/boutique/user-db:${CI_COMMIT_SHORT_SHA}" "${CI_PROJECT_DIR}/docker/user-db"
    - docker push "${NEXUS_REGISTRY}/boutique/user-db:${CI_COMMIT_SHORT_SHA}"
