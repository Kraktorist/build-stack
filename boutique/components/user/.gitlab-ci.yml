workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"

default:
  image: golang:1.7
  before_script:
    - |
        mkdir -p /kaniko/.docker && echo $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
        if [ -n "$CI_COMMIT_TAG" ]; then 
          export TAG=${CI_COMMIT_TAG};
          export REGISTRY=${NEXUS_RELEASE_REGISTRY}; 
        else 
          export TAG=${CI_COMMIT_SHORT_SHA};
          export REGISTRY=${NEXUS_SNAPSHOTS_REGISTRY}; 
        fi
    - mkdir -p $GOPATH/src/github.com/microservices-demo/
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/microservices-demo/user
  
stages:
  - build
  - test
  - push

build:
  stage: build
  tags: [env-dev]
  script:
    - go get -v github.com/Masterminds/glide 
    - glide install
    - cd $GOPATH/src/github.com/microservices-demo/user/
    - CGO_ENABLED=0 go build -a -installsuffix cgo -o ${CI_PROJECT_DIR}/user main.go
  artifacts:
    expire_in: 2 hrs
    paths: 
      - ${CI_PROJECT_DIR}/user

test:
  stage: test
  tags: [env-dev]
  script:
    - go get -v github.com/Masterminds/glide 
    - glide install
    - cd $GOPATH/src/github.com/microservices-demo/user/
    - echo -e "./users/\n./api/" | xargs go test -v

push-user:
  stage: push
  tags: [env-dev]
  image:
    name: ${NEXUS_GROUP_REGISTRY}/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg "COMMIT=${CI_COMMIT_SHORT_SHA}"
      --build-arg "BUILD_DATE=${CI_JOB_STARTED_AT}"
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/user/Dockerfile-release"
      --destination "${REGISTRY}/boutique/user:${TAG}"
      --registry-certificate ${REGISTRY}=${TRUSTED_CERTIFICATES}
      --registry-certificate ${NEXUS_GROUP_REGISTRY}=${TRUSTED_CERTIFICATES}
      --registry-mirror ${NEXUS_GROUP_REGISTRY}

push-user-db:
  image: 
    name: ${NEXUS_GROUP_REGISTRY}/docker:20.10.16
  tags: [env-dev]
  services:
    - name: ${NEXUS_GROUP_REGISTRY}/docker:20.10.16-dind
      # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3808
      entrypoint: [ "sh", "-c", "dockerd-entrypoint.sh $DOCKER_DAEMON_OPTIONS" ]
  stage: push
  variables:
    DOCKER_DAEMON_OPTIONS: "--insecure-registry=${NEXUS_RELEASE_REGISTRY}"
    DOCKER_HOST: tcp://localhost:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  script:
    - mkdir -p ${HOME}/.docker && echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - |
      mkdir -p /etc/docker
    - echo "Waiting for docker cli to respond before continuing build..."
    - |
      for i in $(seq 1 30); do
          if ! docker info &> /dev/null; then
              echo "Docker not responding yet. Sleeping for 2s..." && sleep 2s
          else
              echo "Docker ready. Continuing build..."
              break
          fi
      done
    - docker build --build-arg BUILD_DATE=${CI_JOB_STARTED_AT} --build-arg COMMIT=${CI_COMMIT_SHORT_SHA} -t "${REGISTRY}/boutique/user-db:${TAG}" "${CI_PROJECT_DIR}/docker/user-db"
    - docker push "${REGISTRY}/boutique/user-db:${TAG}"
